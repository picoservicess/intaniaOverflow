version: "3.8"

services:
    # asset-service:
    #     build: ./asset-service
    #     expose:
    #         - '3000'

    thread-service:
        build:
            context: ./
            dockerfile: ./thread-service/Dockerfile
        container_name: thread-service
        expose:
            - '30043'
        ports:
            - "30043:30043"
        networks:
            - intania-overflow-network

    # voting-service:
    #     build: ./voting-service
    #     expose:
    #         - '3000'

    kong-database:
        image: postgres:9.6
        container_name: kong-database
        environment:
            POSTGRES_USER: kong
            POSTGRES_DB: kong
            POSTGRES_PASSWORD: kong
        networks:
            - intania-overflow-network
        ports:
            - "5432:5432"

    kong-migrations:
        image: kong:latest
        container_name: kong-migrations
        depends_on:
            - kong-database
        environment:
            KONG_DATABASE: postgres
            KONG_PG_HOST: kong-database
            KONG_PG_PASSWORD: kong
        networks:
            - intania-overflow-network
        command: kong migrations bootstrap
        restart: on-failure

    kong:
        image: kong:latest
        container_name: kong
        depends_on:
            - kong-migrations
        environment:
            KONG_DATABASE: postgres
            KONG_PG_HOST: kong-database
            KONG_PG_PASSWORD: kong
            KONG_PROXY_ACCESS_LOG: /dev/stdout
            KONG_ADMIN_ACCESS_LOG: /dev/stdout
            KONG_PROXY_ERROR_LOG: /dev/stderr
            KONG_ADMIN_ERROR_LOG: /dev/stderr
            KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
            KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:9080 http2, 0.0.0.0:9081 http2 ssl
        ports:
            - "8000:8000"
            - "8443:8443"
            - "127.0.0.1:8001:8001"
            - "127.0.0.1:8444:8444"
            - "127.0.0.1:9080:9080"
            - "127.0.0.1:9081:9081"
        networks:
            - intania-overflow-network
        restart: on-failure

    konga-prepare:
        image: pantsel/konga
        container_name: konga-prepare
        depends_on:
            - kong
            - kong-database
        networks:
            - intania-overflow-network
        command:
            [
                "-c",
                "prepare",
                "-a",
                "postgres",
                "-u",
                "postgresql://kong:kong@kong-database:5432/konga",
            ]
        restart: "on-failure"

    konga:
        image: pantsel/konga
        container_name: konga
        depends_on:
            - konga-prepare
            - kong-database
        environment:
            DB_ADAPTER: postgres
            DB_HOST: kong-database
            DB_URI: postgresql://kong:kong@kong-database:5432/konga
            KONGA_HOOK_TIMEOUT: 120000
            NODE_ENV: production
        ports:
            - "1337:1337"
        networks:
            - intania-overflow-network
        restart: on-failure

networks:
    intania-overflow-network:
        driver: bridge
