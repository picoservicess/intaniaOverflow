syntax = "proto3";

service ThreadService {
    // Get all threads
    rpc getAllThreads (google.protobuf.Empty) returns (ThreadList) {
        option (google.api.http) = {
            get: "/v1/threads"
        };
    }

    // Get thread by ID
    rpc getThreadById (ThreadId) returns (Thread) {
        option (google.api.http) = {
            get: "/v1/threads/{ThreadId}"
        };
    }

    // Create new thread
    rpc createThread (Thread) returns (Thread) {
        option (google.api.http) = {
            post: "/v1/threads"
            body: "*"
        };
    }

    // Update existing thread
    rpc updateThread (Thread) returns (Thread) {
        option (google.api.http) = {
            put: "/v1/threads/{threadId}"
            body: "*"
        };
    }

    // Delete thread
    rpc deleteThread (ThreadId) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/threads/{ThreadId}"
        };
    }

    // Search threads
    rpc searchThreads (SearchQuery) returns (ThreadList) {
        option (google.api.http) = {
            get: "/v1/threads/search"
        };
    }

    // Health check
    rpc healthCheck (google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/v1/health"
        };
    }
}

message Empty{}

message SearchQuery {
    string query = 1;
}

message Thread {
    string threadId = 1;
    string title = 2;
    string body = 3;
    repeated string assetUrls = 4;
    repeated string tags = 5;
    string authorId = 6;
    string createdAt = 7;
    string updatedAt = 8;
    bool isDeleted = 9;
}

message ThreadList {
    repeated Thread threads = 1;
}

message ThreadId {
    string ThreadId = 1;
}
